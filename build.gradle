import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

buildscript {

  ext.buildConfig = [
    "compileSdk": 33,
    "minSdk"    : 31,
    "targetSdk" : 33,

    "version"   : [
      "major": 1,
      "minor": 0,
      "patch": 0,
      "build": 0,
    ],
  ]
  ext.buildConfig.version["name"] = "${buildConfig.version.major}.${buildConfig.version.minor}.${buildConfig.version.patch}"
  ext.buildConfig.version["fullName"] = "${buildConfig.version.name}.${buildConfig.version.build}"
  ext.buildConfig.version["code"] = buildConfig.version.major * 1000000 + buildConfig.version.minor * 10000 + buildConfig.version.patch * 100 + buildConfig.version.build

  repositories {
    google()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
  }

  dependencies {
    // FIXME: Need to remove this more info at (https://github.com/Sripadmanabans/Pixels/issues/30)
    classpath libs.detekt.classpath
    classpath libs.kotlinter.classpath
  }
}

plugins {
  alias libs.plugins.ben.gradle apply true

  alias libs.plugins.android.application apply false
  alias libs.plugins.android.junit5 apply false
  alias libs.plugins.android.library apply false

  alias libs.plugins.compose apply false

  alias libs.plugins.detekt apply false

  alias libs.plugins.kotlin.android apply false
  alias libs.plugins.kotlin.jvm apply false
  alias libs.plugins.kotlin.kapt apply false
  alias libs.plugins.kotlinter apply false

  alias libs.plugins.ksp apply false

  alias libs.plugins.square.anvil apply false
  alias libs.plugins.square.sqldelight apply false
}

subprojects {
  configurations.configureEach {
    // We forcefully exclude AppCompat + MDC from any transitive dependencies.
    // This is a Compose app, so there's no need for these.
    exclude group: "androidx.appcompat"
    exclude group: "com.google.android.material", module: "material"
  }

  plugins.withId('java-base') {
    java {
      toolchain {
        languageVersion = JavaLanguageVersion.of(11)
      }
    }
  }

  tasks.withType(KotlinCompile).configureEach { task ->
    task.kotlinOptions {
      jvmTarget = "11"
      allWarningsAsErrors = true

      freeCompilerArgs += "-XXLanguage:+NewInference"
      freeCompilerArgs += "-progressive"
    }
  }

  plugins.withType(com.android.build.gradle.BasePlugin).configureEach { plugin ->
    def android = plugin.extension

    android.compileOptions {
      sourceCompatibility = JavaVersion.VERSION_11
      targetCompatibility = JavaVersion.VERSION_11
    }

    android.compileSdkVersion buildConfig.compileSdk

    android.defaultConfig {
      minSdkVersion buildConfig.minSdk
      targetSdkVersion buildConfig.targetSdk
    }
  }

  tasks.withType(JavaCompile).configureEach { task ->
    task.sourceCompatibility = JavaVersion.VERSION_11
    task.targetCompatibility = JavaVersion.VERSION_11
  }

  tasks.withType(Test) {
    testLogging {
      events "skipped", "failed", "passed"
    }
  }
  // TODO same thing for instrumentation tests: https://issuetracker.google.com/issues/37056080
  //tasks.withType(AndroidTestTask) {
  //  testLogging {
  //    events "skipped", "failed", "passed"
  //  }
  //}

  apply plugin: "org.jmailen.kotlinter"
  tasks.withType(org.jmailen.gradle.kotlinter.tasks.LintTask) {
    exclude { it.file.path.contains("generated/") }
  }
  tasks.withType(org.jmailen.gradle.kotlinter.tasks.FormatTask) {
    exclude { it.file.path.contains("generated/") }
  }

  apply plugin: "io.gitlab.arturbosch.detekt"
  detekt {
    config = files("${rootDir}/detekt.yml")
    // Treat config file as an override for the default config.
    buildUponDefaultConfig = true
  }
}

@SuppressWarnings('unused')
def propOrEmpty(String name) {
  return hasProperty(name) ? getProperty(name) : ''
}
