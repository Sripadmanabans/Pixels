name: CD

on:
  push:
    branches:
      - develop

concurrency:
  group: CD-develop
  cancel-in-progress: true

env:
  ORG_GRADLE_PROJECT_PIXELS_KEY_ALIAS: ${{ secrets.ORG_GRADLE_PROJECT_PIXELS_KEY_ALIAS }}
  ORG_GRADLE_PROJECT_PIXELS_KEY_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_PIXELS_KEY_PASSWORD }}
  ORG_GRADLE_PROJECT_PIXELS_STORE_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_PIXELS_STORE_PASSWORD }}
  ORG_GRADLE_PROJECT_PIXELS_CLIENT_ID: ${{ secrets.ORG_GRADLE_PROJECT_PIXELS_CLIENT_ID }}

jobs:
  assemble:
    name: Assemble
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      # These setup steps should be common across all jobs in this workflow.
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - uses: burrunan/gradle-cache-action@v1
        name: Assemble with gradle â€” make sure everything builds
        with:
          gradle-dependencies-cache-key: |
            gradle/libs.versions.toml
          arguments: |
            assemble --no-daemon --stacktrace -Dorg.gradle.unsafe.configuration-cache=false
          concurrent: true

  # Runs all check tasks in parallel.
  check:
    name: Check
    needs: assemble
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      # Run all checks, even if some fail.
      fail-fast: false
      matrix:
        gradle-task:
          # Unit tests
          - test
          - lint
          - lintKotlin
          - detekt
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - uses: burrunan/gradle-cache-action@v1
        name: Check with Gradle
        with:
          gradle-dependencies-cache-key: |
            gradle/libs.versions.toml
          arguments: |
            ${{ matrix.gradle-task }} --no-daemon --stacktrace -Dorg.gradle.unsafe.configuration-cache=false
          concurrent: true

  instrumentation-tests:
    name: Instrumentation tests
    needs: assemble
    runs-on: macos-latest
    timeout-minutes: 30
    strategy:
      # Allow tests to continue on other devices if they fail on one device.
      fail-fast: false
      matrix:
        target: [ google_apis ]
        api-level: [ 31 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      ## Build before running tests, using cache.
      - uses: burrunan/gradle-cache-action@v1
        name: Build instrumented tests
        with:
          gradle-dependencies-cache-key: |
            gradle/libs.versions.toml
          arguments: |
            assembleDebugAndroidTest --no-daemon --stacktrace -Dorg.gradle.unsafe.configuration-cache=false
          concurrent: true

      ## Actual task.
      - name: Instrumentation Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -no-snapshot-save
          disable-animations: true
          arch: x86_64
          script: ./gradlew connectedCheck --no-daemon --stacktrace -Dorg.gradle.unsafe.configuration-cache=false

      ## Uploading test data.
      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation-test-results-${{ matrix.api-level }}
          path: ./**/build/reports/androidTests/connected/**
