apply plugin: "com.android.library"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.squareup.anvil"

archivesBaseName = "ui-gallery-impl"

android {
  compileSdkVersion buildConfig.compileSdk

  defaultConfig {
    minSdkVersion buildConfig.minSdk
    targetSdkVersion buildConfig.targetSdk

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    // The following argument makes the Android Test Orchestrator run its
    // "pm clear" command after each test invocation. This command ensures
    // that the app's state is completely cleared between tests.
    testInstrumentationRunnerArguments clearPackageData: 'true'
  }

  buildFeatures {
    buildConfig false
    compose true
  }

  composeOptions {
    kotlinCompilerExtensionVersion libs.versions.compose.get()
  }

  kotlinOptions {
    freeCompilerArgs += "-Xexplicit-api=strict"
  }

  packagingOptions {
    resources {
      exclude "META-INF/AL2.0"
      exclude "META-INF/LGPL2.1"
    }
  }

  testOptions {
    animationsDisabled true
    execution "ANDROIDX_TEST_ORCHESTRATOR"
  }
}

dependencies {
  implementation projects.lifecycle.public
  implementation projects.network.gallery.public
  implementation projects.scope.public
  implementation projects.theme.public
  implementation projects.timber.public
  implementation projects.ui.gallery.public

  implementation libs.compose.foundation.layout
  implementation libs.compose.material.material
  implementation libs.compose.ui.tooling

  implementation libs.androidx.lifecycle.livedata.ktx
  implementation libs.androidx.lifecycle.viewmodel.ktx

  implementation libs.dagger.runtime

  androidTestImplementation libs.compose.ui.test.core
  androidTestImplementation libs.compose.ui.test.junit
  androidTestImplementation libs.androidx.test.runner
  debugImplementation libs.compose.ui.test.manifest

  androidTestUtil libs.androidx.test.orchestrator
}

anvil {
  generateDaggerFactories = true
}
